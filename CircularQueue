#Circular Queue
class queue:
  def __init__ (self,max):
    self.max=max
    self.queue=[None]*self.max
    self.rear=-1
    self.front=-1

  def enque(self,d):
    if self.front is ((self.rear+1)%self.max) :
      print("Overflow")
    elif self.rear<0:
      self.rear=self.rear+1
      self.queue[self.rear]=d
      self.front=self.front+1
    else:
      self.rear=((self.rear+1)%self.max)
      self.queue[self.rear]=d


  def Display(self):
    if self.front<0:
      print("UnderFlow")
    elif self.rear >= self.front:
      i=self.front
      while i in range(self.front,self.rear):
        print(self.queue[i],end=" ")
        i=((i+1)%self.max)
      print(self.queue[i])
    else:
      for i in range(self.front,self.max):
        print(self.queue[i],end=" ")
      for i in range(0,self.rear+1):
        print(self.queue[i],end=" ")

  def deque(self):
    if self.front<0:
      print("Underflow")
    elif self.front is self.rear:
      print(self.queue[self.front]," is deleted")
      self.front=-1
      self.rear=-1
    else:
      print(self.queue[self.front],"is deleted")
      self.front=((self.front+1) % self.max)
  

    
  

ch=None
q=queue(5)
print("""Enter Your Choice
0.Terminate.
1.Enque.
2.Deque.
3.Display.""")
while ch is not 0:
  ch=int(input("Enter choice: "))
  if ch is 1:
    n=int(input("Enter Number of elements to be inserted: "))
    for i in range (0,n):
      d=int(input("Enter data: "))
      q.enque(d)

  elif ch is 2:
    q.deque()
  elif ch is 3:
    q.Display()

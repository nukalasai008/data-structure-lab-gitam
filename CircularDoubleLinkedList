#Circular Double Linked List Menu Driven Code.
class Node:
  def __init__ (self,d):
    self.data=d
    self.next=None
    self.prev=None
class LinkedList:
  def __init__ (self):
    self.head=None
  def InsertBegin(self,d):
    Newnode=Node(d)
    if self.head is None:
      self.head=Newnode
      Newnode.next=Newnode
      Newnode.prev=Newnode
    else:
      FirstNode=self.head
      LastNode=self.head.prev
      self.head=Newnode
      LastNode.next=Newnode
      FirstNode.prev=Newnode
      Newnode.next=FirstNode
      Newnode.prev=LastNode    
  def InsertEnd(self,d):
    Newnode=Node(d)
    if self.head is None:
      self.head=Newnode
      Newnode.next=Newnode
      Newnode.prev=Newnode
    else:
      LastNode=self.head.prev
      FirstNode=self.head
      LastNode.next=Newnode
      FirstNode.prev=Newnode
      Newnode.prev=LastNode
      Newnode.next=FirstNode

  def DeleteBegin(self):
    if self.head is None:
      print("Circular Double Linked list is empty")
    else:
      LastNode=self.head.prev
      self.head=self.head.next
      FirstNode=self.head
      LastNode.next=FirstNode
      FirstNode.prev=LastNode
      print("\nDeletion at Begin successfull.\n")
  def DeleteEnd(self):
    if self.head is None:
      print("Circular Double Linked List is empty")
    else:
      LastNode=self.head.prev
      FirstNode=self.head
      LastNode.prev.next=FirstNode
      FirstNode.prev=LastNode.prev
      print("\nDeletion at End successfull.\n")

  def Display(self):
    if self.head is None:
      print("Circular Double Linked List is empty")
    else:
      print("Printing from First Node: ")
      temp=self.head
      while temp.next is not self.head:
        print(temp.data,end="->")
        temp=temp.next
      print(temp.data)
      print("Printing From Last Node: ")
      temp=self.head.prev
      while temp.prev is not self.head.prev:
        print(temp.data,end="->")
        temp=temp.prev
      print(temp.data)
ch=None
L1=LinkedList()
print("""Please Select Your Choice
0.Terminate.
1.Insert at begin.
2.Insert at end.
3.Delete at begin.
4.Delete at end.
5.Display.
""")
while ch is not 0:
  ch=int(input("Enter Choice"))
  if ch is 1:
    n=int(input("Enter N: "))
    for i in range (0,n):
      d=int(input())
      L1.InsertBegin(d)
    print("\nInsertion at Begin Successful\n")
  if ch is 2:
    n=int(input("Enter N: "))
    for i in range (0,n):
      d=int(input())
      L1.InsertEnd(d)
    print("\nInsertion at End Successful\n")
  if ch is 3:
    L1.DeleteBegin()
  if ch is 4:
    L1.DeleteEnd()
  if ch is 5:
    L1.Display()
